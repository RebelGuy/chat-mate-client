plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "net.minecraftforge.gradle.forge" version "6f53277"
}

version = "1.22.0"
group = "dev.rebel"
archivesBaseName = "ChatMate"

targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

loadProperties()

def loadProperties() {
    def environment = hasProperty('env') ? env : 'local'
    println "Building for environment " + environment

    def configFile = file('config.groovy')
    def config = new ConfigSlurper(environment).parse(configFile.toURL())

    def numCommits
    def proc = "git rev-list HEAD --count".execute()
    proc.in.eachLine { line -> numCommits = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()

    def splitVersion = project.version.toString().split(/\./)
    splitVersion[2] = numCommits
    config.setProperty('BUILD_NAME', 'ChatMate v' + splitVersion.join("."))

    project.ext.config = config
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
}

configurations {
    // Creates an extra configuration that implements `implementation` to be used later as the configuration that shades libraries
    include
    implementation.extendsFrom(include)
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.9'

    // How to normally add a dependency (If you don't want it to be added to the jar)
    // implementation "com.example:example:1.0.0"
    // If you would like to include it (have the library inside your jar) instead use
    // include "com.example:example:1.0.0"
}

/**
 * This task simply replaces the `${version}` and `${mcversion}` properties in the mcmod.info with the data from Gradle
 */
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // also update when the config changes
    inputs.property "config", project.ext.config

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        include 'environment.yml'

        // replace the templates in the `environment.yml` file with the config values
        def config = project.ext.config as ConfigObject
        expand((Map)config.toProperties()) // for some reason, `getProperties()` doesn't return the values, but this works too!
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info', 'environment.yml'
    }
}

/**
 * This task simply moves resources so they can be accessed at runtime, Forge is quite weird isn't it
 */
task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
            todir: "${buildDir}/classes/java",
            // during hot-reloading, this sometimes fails because the cursor image is in use
            // ignore the error and continue building, see https://ant.apache.org/manual/Tasks/move.html
            failonerror: "false"
    }
}

moveResources.dependsOn processResources
classes.dependsOn moveResources

// This adds support to ("embed", "shade", "include") libraries into our JAR
shadowJar {
    archiveClassifier.set('')
    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

repositories {
    mavenCentral()
}

dependencies {
    // use JUnit 4 because idk if JUnit 5 is supported by Java 8
    testImplementation 'junit:junit:4.13.2'

    testCompile "org.mockito:mockito-core:2.7.5"

    // must use this version for Mockito 2.7.5: https://github.com/powermock/powermock/wiki/Mockito#supported-versions
    testCompile "org.powermock:powermock-core:1.7.0RC4"

    // why mockito2? because otherwise the mocking objects can't be instantiated
    // see https://stackoverflow.com/a/47294653
    testImplementation 'org.powermock:powermock-api-mockito2:1.7.0RC4'

    // e.g. allows @Mock annotations
    testImplementation 'org.powermock:powermock-module-junit4:1.7.0RC4'

}

jar.dependsOn shadowJar
