name: Build and Test Client

on:
  push:
  workflow_dispatch:

jobs:
  build-client:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 12
        uses: actions/setup-java@v2
        with:
          java-version: '12'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Add execution permissions to the Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build
        # note that the test project is completely ignored for this step
        run: ./gradlew setupCIWorkspace build -Penv=${{ github.ref_name == 'master' && 'release' || 'debug' }} --no-daemon -x test

      - name: Test
        if: ${{ !contains(github.event.head_commit.message, '--skip-tests') }}
        run: ./gradlew test

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: built-jar
          path: ./build/libs/*.jar

  # following the example at https://github.com/actions/upload-release-asset
  deploy-client:
    if: ${{ (github.ref_name == 'master' || github.ref_name == 'develop') && !contains(github.event.head_commit.message, '--skip-deploy') }}
    needs: [build-client]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # fetch all commits, not just the latest one, so that the COMMIT_COUNT variable can be correctly calculated
          fetch-depth: 0

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: built-jar

      - name: Rename downloaded .jar file to ChatMate.jar
        run: mv ./*.jar ChatMate.jar

        # - the grep regex didn't recognise \d, and + had to be escaped for some reason lol
        # - for sed:
        #   - s tells sed to do substitution
        #   - /.../ is the regular expression
        #   - followed by the character to replce with (empty)
        #   - / closes the command
        #   - g is the global modifier
        # - setting the variable: https://stackoverflow.com/a/64724369
        # - VERSION: e.g. 1.28.1
        # - MAIN_VERSION: e.g. 1.28
        # - COMMIT_NUMBER: e.g. 123
      - name: Define version variables
        run: |
          VERSION=$(grep -o 'version = "[0-9]\+\.[0-9]\+\.[0-9]\+"' build.gradle | sed 's/[^0-9.]//g')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

          MAIN_VERSION=$(echo $VERSION | sed 's/\.[0-9]\+$//g')

          COMMIT_NUMBER=$(git rev-list HEAD --count)
          echo "COMMIT_NUMBER=$COMMIT_NUMBER" >> $GITHUB_ENV

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # release names and tags have to be unique. just tack on the commit number to the full version to guarantee this (assuming the job doesn't get started manually on github actions)
            tag_name: v${{ env.VERSION }}.${{ env.COMMIT_NUMBER }}${{ github.ref_name == 'master' && '' || ' (Sandbox)' }}
            release_name: ChatMate v${{ env.VERSION }}${{ github.ref_name == 'master' && '' || ' (Sandbox)' }}
            prerelease: ${{ github.ref_name == 'master' && 'false' || 'true' }}

      - name: Release ChatMate.jar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./ChatMate.jar
          asset_name: ChatMate-v${{ env.VERSION }}${{ github.ref_name == 'master' && '' || '-Sandbox'}}.jar
          asset_content_type: application/java-archive
